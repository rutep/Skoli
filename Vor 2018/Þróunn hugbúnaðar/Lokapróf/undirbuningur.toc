\select@language {icelandic}
\contentsline {section}{\numberline {1}Software Engineer}{4}{section.1}
\contentsline {subsection}{\numberline {1.1}Definition}{4}{subsection.1.1}
\contentsline {subsection}{\numberline {1.2}Important skills}{4}{subsection.1.2}
\contentsline {section}{\numberline {2}General project work}{4}{section.2}
\contentsline {subsection}{\numberline {2.1}Reasons for failure}{4}{subsection.2.1}
\contentsline {subsubsection}{\numberline {2.1.1}Excessive schedule}{4}{subsubsection.2.1.1}
\contentsline {subsubsection}{\numberline {2.1.2}Changing needs}{4}{subsubsection.2.1.2}
\contentsline {subsubsection}{\numberline {2.1.3}Lack of documented project plan}{4}{subsubsection.2.1.3}
\contentsline {subsection}{\numberline {2.2}Causes of Software Project Troubles}{4}{subsection.2.2}
\contentsline {section}{\numberline {3}Software Process Models}{4}{section.3}
\contentsline {subsection}{\numberline {3.1}Big Bang Approach}{4}{subsection.3.1}
\contentsline {subsection}{\numberline {3.2}The Waterfall Model}{4}{subsection.3.2}
\contentsline {subsection}{\numberline {3.3}Plan-driven}{5}{subsection.3.3}
\contentsline {subsection}{\numberline {3.4}Agile Models}{5}{subsection.3.4}
\contentsline {section}{\numberline {4}Software Engineer}{5}{section.4}
\contentsline {subsection}{\numberline {4.1}Definition}{5}{subsection.4.1}
\contentsline {subsection}{\numberline {4.2}Important skills}{5}{subsection.4.2}
\contentsline {section}{\numberline {5}Requirements Engineering}{5}{section.5}
\contentsline {subsection}{\numberline {5.1}Functional requirement}{5}{subsection.5.1}
\contentsline {subsection}{\numberline {5.2}Quality requirement}{5}{subsection.5.2}
\contentsline {subsection}{\numberline {5.3}General condition}{5}{subsection.5.3}
\contentsline {subsection}{\numberline {5.4}Conflicts}{6}{subsection.5.4}
\contentsline {subsubsection}{\numberline {5.4.1}Subject conflict}{6}{subsubsection.5.4.1}
\contentsline {subsubsection}{\numberline {5.4.2}Conflict of interest}{6}{subsubsection.5.4.2}
\contentsline {subsubsection}{\numberline {5.4.3}Value conflict}{6}{subsubsection.5.4.3}
\contentsline {subsubsection}{\numberline {5.4.4}Structural conflict}{6}{subsubsection.5.4.4}
\contentsline {subsubsection}{\numberline {5.4.5}Imagine the university contracted you to build a new social networking site for all students. Explain two types of conflicts that you may run into during the requirements elicitation and give an example for each of them}{6}{subsubsection.5.4.5}
\contentsline {subsection}{\numberline {5.5}Technical detail in user story}{6}{subsection.5.5}
\contentsline {subsubsection}{\numberline {5.5.1}User story recipe}{6}{subsubsection.5.5.1}
\contentsline {subsubsection}{\numberline {5.5.2}How much technical detail should be in a user story}{6}{subsubsection.5.5.2}
\contentsline {subsubsection}{\numberline {5.5.3}Example: good user story}{6}{subsubsection.5.5.3}
\contentsline {subsubsection}{\numberline {5.5.4}Example: bad user story}{6}{subsubsection.5.5.4}
\contentsline {section}{\numberline {6}Effort Estimation}{6}{section.6}
\contentsline {subsection}{\numberline {6.1}Planing poker}{7}{subsection.6.1}
\contentsline {subsubsection}{\numberline {6.1.1}Based on differing skills and experience, individual team members may estimate different efforts for any requirement. Discuss whether planning poker eliminates this problem}{7}{subsubsection.6.1.1}
\contentsline {subsubsection}{\numberline {6.1.2}Assume your team came up with an effort spread of 8, 13, 40 and 40 for a particular user story. Interpret and deal with the result}{7}{subsubsection.6.1.2}
\contentsline {subsection}{\numberline {6.2}Anchoring effect}{7}{subsection.6.2}
\contentsline {section}{\numberline {7}Project Planning}{7}{section.7}
\contentsline {subsection}{\numberline {7.1}Calculating new velocity}{7}{subsection.7.1}
\contentsline {subsection}{\numberline {7.2}Predicting how much you can get done next time}{8}{subsection.7.2}
\contentsline {subsection}{\numberline {7.3}Assume your 4-person team completed tasks comprising 20 person-days in a 2-week iteration. Calculate the velocity you should assume when planning the next iteration}{8}{subsection.7.3}
\contentsline {subsection}{\numberline {7.4}Imagine the a client expects more functionality in a release then you will be able to complete until the deadline, based on your effort estimates. Suggest a strategy you could use in this situation}{8}{subsection.7.4}
\contentsline {section}{\numberline {8}Object-Oriented Analysis and Design}{8}{section.8}
\contentsline {subsection}{\numberline {8.1}Associations}{8}{subsection.8.1}
\contentsline {subsection}{\numberline {8.2}Aggregation}{8}{subsection.8.2}
\contentsline {subsection}{\numberline {8.3}Composite}{8}{subsection.8.3}
\contentsline {subsection}{\numberline {8.4}UML University library diagram}{8}{subsection.8.4}
\contentsline {subsection}{\numberline {8.5}Generalization}{8}{subsection.8.5}
\contentsline {subsection}{\numberline {8.6}Specialization}{9}{subsection.8.6}
\contentsline {subsection}{\numberline {8.7}Generalization and specialization seem to be contracting the same concept(inheritance). Explain why both terms are accurate nevertheless}{9}{subsection.8.7}
\contentsline {subsection}{\numberline {8.8}Abstract classes}{9}{subsection.8.8}
\contentsline {subsection}{\numberline {8.9}Interface}{9}{subsection.8.9}
\contentsline {subsection}{\numberline {8.10}Two key differences between abstract classes and interfaces in java}{9}{subsection.8.10}
\contentsline {subsection}{\numberline {8.11}Explain the difference between aggregation and composition of classes in an object-oriented model}{9}{subsection.8.11}
\contentsline {section}{\numberline {9}Object-Oriented Programming}{9}{section.9}
\contentsline {subsection}{\numberline {9.1}Attributes}{9}{subsection.9.1}
\contentsline {subsection}{\numberline {9.2}Behavior}{9}{subsection.9.2}
\contentsline {subsection}{\numberline {9.3}Identity}{9}{subsection.9.3}
\contentsline {subsection}{\numberline {9.4}Static in java}{10}{subsection.9.4}
\contentsline {subsection}{\numberline {9.5}Explain why any static methods of java class can access only the static attributes of the class}{10}{subsection.9.5}
\contentsline {subsection}{\numberline {9.6}Class variable}{10}{subsection.9.6}
\contentsline {subsection}{\numberline {9.7}Instance variable}{10}{subsection.9.7}
\contentsline {subsection}{\numberline {9.8}Instance vs Class}{10}{subsection.9.8}
\contentsline {subsection}{\numberline {9.9}Explain how singleton pattern ensures that only one instance of a class can exists in the system}{10}{subsection.9.9}
\contentsline {section}{\numberline {10}Test money class implement function isequal}{10}{section.10}
\contentsline {subsection}{\numberline {10.1}a) an equal amount in the same currency and compare it to stored item in Money}{10}{subsection.10.1}
\contentsline {section}{\numberline {11}Design Patterns}{11}{section.11}
\contentsline {section}{\numberline {12}Explain the purpose of Proxy pattern, and give an example of a scenario (outside the travel domain) where its use would be beneficial}{11}{section.12}
\contentsline {section}{\numberline {13}Polymorphism}{11}{section.13}
