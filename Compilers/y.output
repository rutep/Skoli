   0  $accept : start $end

   1  start : bodyexprs

   2  opt_idlist :
   3             | idlist

   4  idlist : idlist ',' NAME
   5         | NAME

   6  body : '{' bodyexprs '}'

   7  fundecl : FUN NAME '(' opt_idlist ')' body

   8  bodyexprs : bodyexprs expr ';'
   9            | bodyexprs fundecl ';'
  10            | bodyexprs VAR decl_vars ';'
  11            |

  12  decl_vars : NAME '=' expr
  13            | NAME
  14            | decl_vars ',' NAME '=' expr
  15            | decl_vars ',' NAME

  16  expr : RETURN expr
  17       | NAME '=' expr
  18       | orexpr

  19  orexpr : orexpr OR andexpr
  20         | andexpr

  21  andexpr : andexpr AND notexpr
  22          | notexpr

  23  notexpr : '!' notexpr
  24          | binopexpr

  25  binopexpr : binopexpr OPNAME smallexpr
  26            | smallexpr

  27  smallexpr : OPNAME smallexpr
  28            | '(' expr ')'
  29            | NAME
  30            | NAME '(' args ')'
  31            | WHILE expr body
  32            | IF expr body ifrest
  33            | LITERAL
  34            | body
  35            | FUN '(' opt_idlist ')' body

  36  args :
  37       | arglist

  38  arglist : arglist ',' expr
  39          | expr

  40  ifrest :
  41         | ELSE body
  42         | ELSIF expr body ifrest

state 0
	$accept : . start $end  (0)
	bodyexprs : .  (11)

	.  reduce 11

	start  goto 1
	bodyexprs  goto 2


state 1
	$accept : start . $end  (0)

	$end  accept


state 2
	start : bodyexprs .  (1)
	bodyexprs : bodyexprs . expr ';'  (8)
	bodyexprs : bodyexprs . fundecl ';'  (9)
	bodyexprs : bodyexprs . VAR decl_vars ';'  (10)

	OPNAME  shift 3
	LITERAL  shift 4
	NAME  shift 5
	IF  shift 6
	WHILE  shift 7
	VAR  shift 8
	RETURN  shift 9
	FUN  shift 10
	'{'  shift 11
	'('  shift 12
	'!'  shift 13
	$end  reduce 1

	body  goto 14
	fundecl  goto 15
	expr  goto 16
	orexpr  goto 17
	andexpr  goto 18
	notexpr  goto 19
	binopexpr  goto 20
	smallexpr  goto 21


state 3
	smallexpr : OPNAME . smallexpr  (27)

	OPNAME  shift 3
	LITERAL  shift 4
	NAME  shift 22
	IF  shift 6
	WHILE  shift 7
	FUN  shift 23
	'{'  shift 11
	'('  shift 12
	.  error

	body  goto 14
	smallexpr  goto 24


state 4
	smallexpr : LITERAL .  (33)

	.  reduce 33


state 5
	expr : NAME . '=' expr  (17)
	smallexpr : NAME .  (29)
	smallexpr : NAME . '(' args ')'  (30)

	'('  shift 25
	'='  shift 26
	OPNAME  reduce 29
	AND  reduce 29
	OR  reduce 29
	','  reduce 29
	'{'  reduce 29
	')'  reduce 29
	';'  reduce 29


state 6
	smallexpr : IF . expr body ifrest  (32)

	OPNAME  shift 3
	LITERAL  shift 4
	NAME  shift 5
	IF  shift 6
	WHILE  shift 7
	RETURN  shift 9
	FUN  shift 23
	'{'  shift 11
	'('  shift 12
	'!'  shift 13
	.  error

	body  goto 14
	expr  goto 27
	orexpr  goto 17
	andexpr  goto 18
	notexpr  goto 19
	binopexpr  goto 20
	smallexpr  goto 21


state 7
	smallexpr : WHILE . expr body  (31)

	OPNAME  shift 3
	LITERAL  shift 4
	NAME  shift 5
	IF  shift 6
	WHILE  shift 7
	RETURN  shift 9
	FUN  shift 23
	'{'  shift 11
	'('  shift 12
	'!'  shift 13
	.  error

	body  goto 14
	expr  goto 28
	orexpr  goto 17
	andexpr  goto 18
	notexpr  goto 19
	binopexpr  goto 20
	smallexpr  goto 21


state 8
	bodyexprs : bodyexprs VAR . decl_vars ';'  (10)

	NAME  shift 29
	.  error

	decl_vars  goto 30


state 9
	expr : RETURN . expr  (16)

	OPNAME  shift 3
	LITERAL  shift 4
	NAME  shift 5
	IF  shift 6
	WHILE  shift 7
	RETURN  shift 9
	FUN  shift 23
	'{'  shift 11
	'('  shift 12
	'!'  shift 13
	.  error

	body  goto 14
	expr  goto 31
	orexpr  goto 17
	andexpr  goto 18
	notexpr  goto 19
	binopexpr  goto 20
	smallexpr  goto 21


state 10
	fundecl : FUN . NAME '(' opt_idlist ')' body  (7)
	smallexpr : FUN . '(' opt_idlist ')' body  (35)

	NAME  shift 32
	'('  shift 33
	.  error


state 11
	body : '{' . bodyexprs '}'  (6)
	bodyexprs : .  (11)

	.  reduce 11

	bodyexprs  goto 34


state 12
	smallexpr : '(' . expr ')'  (28)

	OPNAME  shift 3
	LITERAL  shift 4
	NAME  shift 5
	IF  shift 6
	WHILE  shift 7
	RETURN  shift 9
	FUN  shift 23
	'{'  shift 11
	'('  shift 12
	'!'  shift 13
	.  error

	body  goto 14
	expr  goto 35
	orexpr  goto 17
	andexpr  goto 18
	notexpr  goto 19
	binopexpr  goto 20
	smallexpr  goto 21


state 13
	notexpr : '!' . notexpr  (23)

	OPNAME  shift 3
	LITERAL  shift 4
	NAME  shift 22
	IF  shift 6
	WHILE  shift 7
	FUN  shift 23
	'{'  shift 11
	'('  shift 12
	'!'  shift 13
	.  error

	body  goto 14
	notexpr  goto 36
	binopexpr  goto 20
	smallexpr  goto 21


state 14
	smallexpr : body .  (34)

	.  reduce 34


state 15
	bodyexprs : bodyexprs fundecl . ';'  (9)

	';'  shift 37
	.  error


state 16
	bodyexprs : bodyexprs expr . ';'  (8)

	';'  shift 38
	.  error


state 17
	expr : orexpr .  (18)
	orexpr : orexpr . OR andexpr  (19)

	OR  shift 39
	','  reduce 18
	'{'  reduce 18
	')'  reduce 18
	';'  reduce 18


state 18
	orexpr : andexpr .  (20)
	andexpr : andexpr . AND notexpr  (21)

	AND  shift 40
	OR  reduce 20
	','  reduce 20
	'{'  reduce 20
	')'  reduce 20
	';'  reduce 20


state 19
	andexpr : notexpr .  (22)

	.  reduce 22


state 20
	notexpr : binopexpr .  (24)
	binopexpr : binopexpr . OPNAME smallexpr  (25)

	OPNAME  shift 41
	AND  reduce 24
	OR  reduce 24
	','  reduce 24
	'{'  reduce 24
	')'  reduce 24
	';'  reduce 24


state 21
	binopexpr : smallexpr .  (26)

	.  reduce 26


state 22
	smallexpr : NAME .  (29)
	smallexpr : NAME . '(' args ')'  (30)

	'('  shift 25
	OPNAME  reduce 29
	AND  reduce 29
	OR  reduce 29
	','  reduce 29
	'{'  reduce 29
	')'  reduce 29
	';'  reduce 29


state 23
	smallexpr : FUN . '(' opt_idlist ')' body  (35)

	'('  shift 33
	.  error


state 24
	smallexpr : OPNAME smallexpr .  (27)

	.  reduce 27


state 25
	smallexpr : NAME '(' . args ')'  (30)
	args : .  (36)

	OPNAME  shift 3
	LITERAL  shift 4
	NAME  shift 5
	IF  shift 6
	WHILE  shift 7
	RETURN  shift 9
	FUN  shift 23
	'{'  shift 11
	'('  shift 12
	'!'  shift 13
	')'  reduce 36

	body  goto 14
	expr  goto 42
	orexpr  goto 17
	andexpr  goto 18
	notexpr  goto 19
	binopexpr  goto 20
	smallexpr  goto 21
	args  goto 43
	arglist  goto 44


state 26
	expr : NAME '=' . expr  (17)

	OPNAME  shift 3
	LITERAL  shift 4
	NAME  shift 5
	IF  shift 6
	WHILE  shift 7
	RETURN  shift 9
	FUN  shift 23
	'{'  shift 11
	'('  shift 12
	'!'  shift 13
	.  error

	body  goto 14
	expr  goto 45
	orexpr  goto 17
	andexpr  goto 18
	notexpr  goto 19
	binopexpr  goto 20
	smallexpr  goto 21


state 27
	smallexpr : IF expr . body ifrest  (32)

	'{'  shift 11
	.  error

	body  goto 46


state 28
	smallexpr : WHILE expr . body  (31)

	'{'  shift 11
	.  error

	body  goto 47


state 29
	decl_vars : NAME . '=' expr  (12)
	decl_vars : NAME .  (13)

	'='  shift 48
	','  reduce 13
	';'  reduce 13


state 30
	bodyexprs : bodyexprs VAR decl_vars . ';'  (10)
	decl_vars : decl_vars . ',' NAME '=' expr  (14)
	decl_vars : decl_vars . ',' NAME  (15)

	','  shift 49
	';'  shift 50
	.  error


state 31
	expr : RETURN expr .  (16)

	.  reduce 16


state 32
	fundecl : FUN NAME . '(' opt_idlist ')' body  (7)

	'('  shift 51
	.  error


state 33
	smallexpr : FUN '(' . opt_idlist ')' body  (35)
	opt_idlist : .  (2)

	NAME  shift 52
	')'  reduce 2

	opt_idlist  goto 53
	idlist  goto 54


state 34
	body : '{' bodyexprs . '}'  (6)
	bodyexprs : bodyexprs . expr ';'  (8)
	bodyexprs : bodyexprs . fundecl ';'  (9)
	bodyexprs : bodyexprs . VAR decl_vars ';'  (10)

	OPNAME  shift 3
	LITERAL  shift 4
	NAME  shift 5
	IF  shift 6
	WHILE  shift 7
	VAR  shift 8
	RETURN  shift 9
	FUN  shift 10
	'{'  shift 11
	'}'  shift 55
	'('  shift 12
	'!'  shift 13
	.  error

	body  goto 14
	fundecl  goto 15
	expr  goto 16
	orexpr  goto 17
	andexpr  goto 18
	notexpr  goto 19
	binopexpr  goto 20
	smallexpr  goto 21


state 35
	smallexpr : '(' expr . ')'  (28)

	')'  shift 56
	.  error


state 36
	notexpr : '!' notexpr .  (23)

	.  reduce 23


state 37
	bodyexprs : bodyexprs fundecl ';' .  (9)

	.  reduce 9


state 38
	bodyexprs : bodyexprs expr ';' .  (8)

	.  reduce 8


state 39
	orexpr : orexpr OR . andexpr  (19)

	OPNAME  shift 3
	LITERAL  shift 4
	NAME  shift 22
	IF  shift 6
	WHILE  shift 7
	FUN  shift 23
	'{'  shift 11
	'('  shift 12
	'!'  shift 13
	.  error

	body  goto 14
	andexpr  goto 57
	notexpr  goto 19
	binopexpr  goto 20
	smallexpr  goto 21


state 40
	andexpr : andexpr AND . notexpr  (21)

	OPNAME  shift 3
	LITERAL  shift 4
	NAME  shift 22
	IF  shift 6
	WHILE  shift 7
	FUN  shift 23
	'{'  shift 11
	'('  shift 12
	'!'  shift 13
	.  error

	body  goto 14
	notexpr  goto 58
	binopexpr  goto 20
	smallexpr  goto 21


state 41
	binopexpr : binopexpr OPNAME . smallexpr  (25)

	OPNAME  shift 3
	LITERAL  shift 4
	NAME  shift 22
	IF  shift 6
	WHILE  shift 7
	FUN  shift 23
	'{'  shift 11
	'('  shift 12
	.  error

	body  goto 14
	smallexpr  goto 59


state 42
	arglist : expr .  (39)

	.  reduce 39


state 43
	smallexpr : NAME '(' args . ')'  (30)

	')'  shift 60
	.  error


state 44
	args : arglist .  (37)
	arglist : arglist . ',' expr  (38)

	','  shift 61
	')'  reduce 37


state 45
	expr : NAME '=' expr .  (17)

	.  reduce 17


state 46
	smallexpr : IF expr body . ifrest  (32)
	ifrest : .  (40)

	ELSE  shift 62
	ELSIF  shift 63
	OPNAME  reduce 40
	AND  reduce 40
	OR  reduce 40
	','  reduce 40
	'{'  reduce 40
	')'  reduce 40
	';'  reduce 40

	ifrest  goto 64


state 47
	smallexpr : WHILE expr body .  (31)

	.  reduce 31


state 48
	decl_vars : NAME '=' . expr  (12)

	OPNAME  shift 3
	LITERAL  shift 4
	NAME  shift 5
	IF  shift 6
	WHILE  shift 7
	RETURN  shift 9
	FUN  shift 23
	'{'  shift 11
	'('  shift 12
	'!'  shift 13
	.  error

	body  goto 14
	expr  goto 65
	orexpr  goto 17
	andexpr  goto 18
	notexpr  goto 19
	binopexpr  goto 20
	smallexpr  goto 21


state 49
	decl_vars : decl_vars ',' . NAME '=' expr  (14)
	decl_vars : decl_vars ',' . NAME  (15)

	NAME  shift 66
	.  error


state 50
	bodyexprs : bodyexprs VAR decl_vars ';' .  (10)

	.  reduce 10


state 51
	fundecl : FUN NAME '(' . opt_idlist ')' body  (7)
	opt_idlist : .  (2)

	NAME  shift 52
	')'  reduce 2

	opt_idlist  goto 67
	idlist  goto 54


state 52
	idlist : NAME .  (5)

	.  reduce 5


state 53
	smallexpr : FUN '(' opt_idlist . ')' body  (35)

	')'  shift 68
	.  error


state 54
	opt_idlist : idlist .  (3)
	idlist : idlist . ',' NAME  (4)

	','  shift 69
	')'  reduce 3


state 55
	body : '{' bodyexprs '}' .  (6)

	.  reduce 6


state 56
	smallexpr : '(' expr ')' .  (28)

	.  reduce 28


state 57
	orexpr : orexpr OR andexpr .  (19)
	andexpr : andexpr . AND notexpr  (21)

	AND  shift 40
	OR  reduce 19
	','  reduce 19
	'{'  reduce 19
	')'  reduce 19
	';'  reduce 19


state 58
	andexpr : andexpr AND notexpr .  (21)

	.  reduce 21


state 59
	binopexpr : binopexpr OPNAME smallexpr .  (25)

	.  reduce 25


state 60
	smallexpr : NAME '(' args ')' .  (30)

	.  reduce 30


state 61
	arglist : arglist ',' . expr  (38)

	OPNAME  shift 3
	LITERAL  shift 4
	NAME  shift 5
	IF  shift 6
	WHILE  shift 7
	RETURN  shift 9
	FUN  shift 23
	'{'  shift 11
	'('  shift 12
	'!'  shift 13
	.  error

	body  goto 14
	expr  goto 70
	orexpr  goto 17
	andexpr  goto 18
	notexpr  goto 19
	binopexpr  goto 20
	smallexpr  goto 21


state 62
	ifrest : ELSE . body  (41)

	'{'  shift 11
	.  error

	body  goto 71


state 63
	ifrest : ELSIF . expr body ifrest  (42)

	OPNAME  shift 3
	LITERAL  shift 4
	NAME  shift 5
	IF  shift 6
	WHILE  shift 7
	RETURN  shift 9
	FUN  shift 23
	'{'  shift 11
	'('  shift 12
	'!'  shift 13
	.  error

	body  goto 14
	expr  goto 72
	orexpr  goto 17
	andexpr  goto 18
	notexpr  goto 19
	binopexpr  goto 20
	smallexpr  goto 21


state 64
	smallexpr : IF expr body ifrest .  (32)

	.  reduce 32


state 65
	decl_vars : NAME '=' expr .  (12)

	.  reduce 12


state 66
	decl_vars : decl_vars ',' NAME . '=' expr  (14)
	decl_vars : decl_vars ',' NAME .  (15)

	'='  shift 73
	','  reduce 15
	';'  reduce 15


state 67
	fundecl : FUN NAME '(' opt_idlist . ')' body  (7)

	')'  shift 74
	.  error


state 68
	smallexpr : FUN '(' opt_idlist ')' . body  (35)

	'{'  shift 11
	.  error

	body  goto 75


state 69
	idlist : idlist ',' . NAME  (4)

	NAME  shift 76
	.  error


state 70
	arglist : arglist ',' expr .  (38)

	.  reduce 38


state 71
	ifrest : ELSE body .  (41)

	.  reduce 41


state 72
	ifrest : ELSIF expr . body ifrest  (42)

	'{'  shift 11
	.  error

	body  goto 77


state 73
	decl_vars : decl_vars ',' NAME '=' . expr  (14)

	OPNAME  shift 3
	LITERAL  shift 4
	NAME  shift 5
	IF  shift 6
	WHILE  shift 7
	RETURN  shift 9
	FUN  shift 23
	'{'  shift 11
	'('  shift 12
	'!'  shift 13
	.  error

	body  goto 14
	expr  goto 78
	orexpr  goto 17
	andexpr  goto 18
	notexpr  goto 19
	binopexpr  goto 20
	smallexpr  goto 21


state 74
	fundecl : FUN NAME '(' opt_idlist ')' . body  (7)

	'{'  shift 11
	.  error

	body  goto 79


state 75
	smallexpr : FUN '(' opt_idlist ')' body .  (35)

	.  reduce 35


state 76
	idlist : idlist ',' NAME .  (4)

	.  reduce 4


state 77
	ifrest : ELSIF expr body . ifrest  (42)
	ifrest : .  (40)

	ELSE  shift 62
	ELSIF  shift 63
	OPNAME  reduce 40
	AND  reduce 40
	OR  reduce 40
	','  reduce 40
	'{'  reduce 40
	')'  reduce 40
	';'  reduce 40

	ifrest  goto 80


state 78
	decl_vars : decl_vars ',' NAME '=' expr .  (14)

	.  reduce 14


state 79
	fundecl : FUN NAME '(' opt_idlist ')' body .  (7)

	.  reduce 7


state 80
	ifrest : ELSIF expr body ifrest .  (42)

	.  reduce 42


23 terminals, 17 nonterminals
43 grammar rules, 81 states
